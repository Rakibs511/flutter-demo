# .github/workflows/flutter_ci.yml

name: Flutter CI/CD 🚀

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  android_web:
    name: 🤖 Android & Web Build
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 💻 Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.4'  # Dart 3.8 compatible

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🧹 Analyze code
        run: flutter analyze

      - name: 🧪 Run unit tests
        run: flutter test

      - name: 🏗️ Build Android APK (release)
        run: flutter build apk --release

      - name: 🖥️ Build Flutter Web (release)
        run: flutter build web --release

      - name: 📤 Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: 📤 Upload Flutter Web build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web
          

      - name: ✅ Notify on Success
        if: success()
        env:
            TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
            TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
            curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d chat_id="$TELEGRAM_CHAT_ID" \
            -d parse_mode="Markdown" \
            -d text="✅ *Build Succeeded!*

            *Repo:* \`${{ github.repository }}\`
            *Branch:* \`${{ github.ref_name }}\`
            *Commit:* \`${{ github.event.head_commit.message }}\`
            *Author:* \`${{ github.actor }}\`

            [🔍 View Build Log](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" \
                -d reply_markup="$(jq -nc --arg url "https://github.com/Rakibs511/flutter-demo/releases/download/${{ github.ref_name }}/app-release.apk" \
                '{"inline_keyboard":[[{"text":"📦 Download APK","url":$url}]]}')"

      - name: ❌ Notify on Failure
        if: failure()
        env:
            TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
            TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
            curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d chat_id="$TELEGRAM_CHAT_ID" \
            -d parse_mode="Markdown" \
            -d text="❌ *Build Failed!*

            *Repo:* \`${{ github.repository }}\`
            *Branch:* \`${{ github.ref_name }}\`
            *Commit:* \`${{ github.event.head_commit.message }}\`
            *Author:* \`${{ github.actor }}\`

            [🧪 View Failed Build](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"

  ios:
    name: 🍏 iOS Build (Unsigned)
    runs-on: macos-latest
    needs: android_web

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 💻 Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.4'

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🔧 Install CocoaPods
        run: |
          sudo gem install cocoapods
          cd ios
          pod install
          cd ..

      - name: 🍎 Build iOS app (unsigned)
        run: flutter build ios --release --no-codesign

      - name: 📤 Upload iOS App Bundle (.app)
        uses: actions/upload-artifact@v4
        with:
          name: ios-app
          path: build/ios/iphoneos/Runner.app

      - name: ✅ Notify on Success
        if: success()
        env:
            TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
            TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
            curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d chat_id="$TELEGRAM_CHAT_ID" \
            -d parse_mode="Markdown" \
            -d text="✅ *Build Succeeded!*

            *Repo:* \`${{ github.repository }}\`
            *Branch:* \`${{ github.ref_name }}\`
            *Commit:* \`${{ github.event.head_commit.message }}\`
            *Author:* \`${{ github.actor }}\`

            [🔍 View Build Log](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" \
                -d reply_markup="$(jq -nc --arg url "https://github.com/Rakibs511/flutter-demo/releases/download/${{ github.ref_name }}/app-release.apk" \
                '{"inline_keyboard":[[{"text":"📦 Download APK","url":$url}]]}')"


      - name: ❌ Notify on Failure
        if: failure()
        env:
            TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
            TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
            curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d chat_id="$TELEGRAM_CHAT_ID" \
            -d parse_mode="Markdown" \
            -d text="❌ *Build Failed!*

            *Repo:* \`${{ github.repository }}\`
            *Branch:* \`${{ github.ref_name }}\`
            *Commit:* \`${{ github.event.head_commit.message }}\`
            *Author:* \`${{ github.actor }}\`

            [🧪 View Failed Build](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"

